diff --git a/filefield_sources_jsonapi.routing.yml b/filefield_sources_jsonapi.routing.yml
index 7ca74c7..756f81a 100644
--- a/filefield_sources_jsonapi.routing.yml
+++ b/filefield_sources_jsonapi.routing.yml
@@ -45,4 +45,11 @@ entity.filefield_sources_jsonapi.delete_form:
   requirements:
     _permission: 'administer site configuration'
   options:
-    _admin_route: TRUE
\ No newline at end of file
+    _admin_route: TRUE
+
+filefield_sources_jsonapi.get_remote_file:
+  path: 'filefield_sources_jsonapi/get-remote-file'
+  defaults:
+    _controller: '\Drupal\filefield_sources_jsonapi\RemoteFileController::getRemoteFile'
+  requirements:
+    _permission: 'access content'
diff --git a/src/Form/ModalBrowserForm.php b/src/Form/ModalBrowserForm.php
index cfebc68..3b41bc2 100644
--- a/src/Form/ModalBrowserForm.php
+++ b/src/Form/ModalBrowserForm.php
@@ -13,6 +13,7 @@ use Drupal\Core\Form\FormStateInterface;
 use Drupal\field\Entity\FieldStorageConfig;
 use Drupal\filefield_sources_jsonapi\Entity\FileFieldSourcesJSONAPI;
 use GuzzleHttp\Client;
+use Drupal\Core\Url;
 
 /**
  * Implements the ModalBrowserForm form controller.
@@ -158,7 +159,7 @@ class ModalBrowserForm extends FormBase {
     ];
     $form['wrapper']['image'] = [
       '#theme' => 'image',
-      '#uri' => $file['thumbnail_url'],
+      '#uri' => Url::fromRoute('filefield_sources_jsonapi.get_remote_file', ['url' => $file['thumbnail_url']])->toString(),
       '#width' => '400',
     ];
     $form['wrapper']['detail'] = [
diff --git a/src/RemoteFileController.php b/src/RemoteFileController.php
index e69de29..8fd2b68 100644
--- a/src/RemoteFileController.php
+++ b/src/RemoteFileController.php
@@ -0,0 +1,49 @@
+<?php
+
+namespace Drupal\filefield_sources_jsonapi;
+
+use Drupal\Core\Controller\ControllerBase;
+use Symfony\Component\HttpKernel\Exception\NotFoundHttpException;
+use Symfony\Component\HttpFoundation\BinaryFileResponse;
+
+/**
+ * Retrieve file via curl call for filefield source JSON API.
+ */
+class RemoteFileController extends ControllerBase {
+
+  /**
+   * Get file via curl and return it.
+   */
+  public static function getRemoteFile() {
+    $myConfig = \Drupal::config('filefield_sources_jsonapi');
+    $username = $myConfig->get('username');
+    $password = $myConfig->get('password');
+
+    $url = \Drupal::request()->query->get('url');
+    $temporary_directory = 'temporary://';
+    $url_info = parse_url($url);
+    $filename = rawurldecode(basename($url_info['path']));
+    $filepath = file_create_filename($filename, $temporary_directory);
+
+    $ch = curl_init();
+    curl_setopt($ch, CURLOPT_URL, $url);
+    curl_setopt($ch, CURLOPT_HEADER, FALSE);
+    // Causes a warning if PHP safe mode is on.
+    @curl_setopt($ch, CURLOPT_FOLLOWLOCATION, TRUE);
+    curl_setopt($ch, CURLOPT_HTTPAUTH, CURLAUTH_BASIC);
+    curl_setopt($ch, CURLOPT_USERPWD, "$username:$password");
+
+    $file_contents = curl_exec($ch);
+
+    if (isset($file_contents)) {
+      if ($fp = @fopen($filepath, 'w')) {
+        fwrite($fp, $file_contents);
+        fclose($fp);
+        return new BinaryFileResponse($filepath, 200);
+      }
+    }
+
+    throw new NotFoundHttpException();
+  }
+
+}
