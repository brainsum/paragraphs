diff --git a/exception_mailer.module b/exception_mailer.module
index 3c56913..902db6d 100644
--- a/exception_mailer.module
+++ b/exception_mailer.module
@@ -13,11 +13,32 @@ function exception_mailer_mail($key, &$message, $params) {
     $body =
     t('An exception has occurred.
 
+    Site name: @site
+
+    Date: @date
+
+    User: @user
+
+    Location: @location
+
+    Referrer: @referrer
+
     Exception: @exception
 
     Exception message: @message
 
-    Thank you.', ['@exception' => $params['exception'], '@message' => $params['message']]);
+    Hostname: @hostname
+
+    Thank you.', [
+      '@site' => $params['site'],
+      '@date' => $params['date'],
+      '@user' => $params['user'],
+      '@location' => $params['location'],
+      '@referrer' => $params['referrer'],
+      '@exception' => $params['exception'],
+      '@message' => $params['message'],
+      '@hostname' => $params['hostname'],
+      ]);
     $message['subject'] = t('An exception occurred (@exception)', ['@exception' => $params['exception']]);
     $message['body'][] = $body;
   }
diff --git a/exception_mailer.services.yml b/exception_mailer.services.yml
index 33b337a..0b4567c 100644
--- a/exception_mailer.services.yml
+++ b/exception_mailer.services.yml
@@ -1,6 +1,6 @@
 services:
   exception_mailer.exception.subscriber:
     class: Drupal\exception_mailer\Subscribers\ExceptionEventSubscriber
-    arguments: ['@logger.factory', '@queue', '@plugin.manager.queue_worker']
+    arguments: ['@logger.factory', '@queue', '@plugin.manager.queue_worker', '@config.factory', '@current_user', '@date.formatter', '@datetime.time']
     tags:
       - { name: event_subscriber }
diff --git a/src/Subscribers/ExceptionEventSubscriber.php b/src/Subscribers/ExceptionEventSubscriber.php
index b4e149f..f934405 100644
--- a/src/Subscribers/ExceptionEventSubscriber.php
+++ b/src/Subscribers/ExceptionEventSubscriber.php
@@ -13,6 +13,10 @@ use Symfony\Component\HttpFoundation\Response;
 use Symfony\Component\HttpKernel\Event\GetResponseForExceptionEvent;
 use Symfony\Component\HttpKernel\Exception\NotFoundHttpException;
 use Symfony\Component\HttpKernel\KernelEvents;
+use Drupal\Core\Config\ConfigFactory;
+use Drupal\Core\Session\AccountInterface;
+use Drupal\Core\Datetime\DateFormatterInterface;
+use Drupal\Component\Datetime\TimeInterface;

 /**
  * Subscribe to thrown exceptions to send emails to admin users.
@@ -41,12 +45,67 @@ class ExceptionEventSubscriber implements EventSubscriberInterface {
   protected $queueManager;

   /**
+   * The configuration factory.
+   *
+   * @var \Drupal\Core\Config\ConfigFactory
+   */
+  protected $configFactory;
+
+  /**
+   * The current user.
+   *
+   * @var \Drupal\Core\Session\AccountInterface
+   */
+  protected $currentUser;
+
+  /**
+   * The date formatter service.
+   *
+   * @var \Drupal\Core\Datetime\DateFormatterInterface
+   */
+  protected $dateFormatter;
+
+  /**
+   * The time service.
+   *
+   * @var \Drupal\Component\Datetime\TimeInterface
+   */
+  protected $time;
+
+  /**
    * Constructor.
+   *
+   * @param \Drupal\Core\Logger\LoggerChannelFactoryInterface $logger
+   *   The logger.
+   * @param \Drupal\Core\Queue\QueueFactory $queue_factory
+   *  The queue service.
+   * @param \Drupal\Core\Queue\QueueWorkerManagerInterface $queue_manager
+   *   The queue manager.
+   * @param \Drupal\Core\Config\ConfigFactory $configFactory
+   *   The configuration factory.
+   * @param \Drupal\Core\Session\AccountInterface $account
+   *   The current user.
+   * @param \Drupal\Core\Datetime\DateFormatterInterface $dateFormatter
+   *   The date formatter service.
+   * @param \Drupal\Component\Datetime\TimeInterface $time
+   *   The time service.
    */
-  public function __construct(LoggerChannelFactoryInterface $logger, QueueFactory $queue_factory, QueueWorkerManagerInterface $queue_manager) {
+  public function __construct(
+    LoggerChannelFactoryInterface $logger,
+    QueueFactory $queue_factory,
+    QueueWorkerManagerInterface $queue_manager,
+    ConfigFactory $configFactory,
+    AccountInterface $account,
+    DateFormatterInterface $dateFormatter,
+    TimeInterface $time
+  ) {
     $this->logger = $logger;
     $this->queueFactory = $queue_factory;
     $this->queueManager = $queue_manager;
+    $this->configFactory = $configFactory;
+    $this->currentUser = $account;
+    $this->dateFormatter = $dateFormatter;
+    $this->time = $time;
   }

   /**
@@ -56,6 +115,9 @@ class ExceptionEventSubscriber implements EventSubscriberInterface {
    *   The exception event.
    */
   public function onException(GetResponseForExceptionEvent $event) {
+    $request = $event->getRequest();
+    $date = $this->dateFormatter->format($this->time->getRequestTime(), 'custom', 'j M Y - G:i T', drupal_get_user_timezone());
+
     $exception = $event->getException();
     $queue = $this->queueFactory->get('manual_exception_email', TRUE);
     $queue_worker = $this->queueManager->createInstance('manual_exception_email');
@@ -63,7 +125,13 @@ class ExceptionEventSubscriber implements EventSubscriberInterface {
       foreach (UserRepository::getUserEmails("administrator") as $admin) {
         $data['email'] = $admin;
         $data['exception'] = get_class($exception);
-        $data['message'] = $exception->getMessage();
+        $data['message'] = $exception->getMessage() . "\n" . $exception->getTraceAsString();
+        $data['site'] = $this->configFactory->get('system.site')->get('name');
+        $data['date'] = $date;
+        $data['user'] = $this->currentUser->getDisplayName();
+        $data['location'] = $request->getUri();
+        $data['referrer'] = $request->headers->get('Referer', '');
+        $data['hostname'] = $request->getClientIp();
         $queue->createItem($data);
       }
       while ($item = $queue->claimItem()) {
