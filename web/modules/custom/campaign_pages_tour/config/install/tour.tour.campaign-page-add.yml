# This file defines the tour for our example page. There should be one tour
# file for each tour that you create. These tour files should be placed in a
# module's 'config' folder and named using the pattern
# 'tour.tour.{tour-id}.yml'.
#
# Each tour file has two parts: 1) The tour properties, and 2) the tip
# definitions.
#
#
# TOUR PROPERTIES
#
# The tour properties define information that applies to the tour as a whole.
# Properties that you can define for your tours include the following:
#
#   id:         Each tour should have a unique ID. This id is used in the
#               filename and appears as an ID in the HTML.
#   module:     The machine name of the module containing your tour.
#   label:      A human readable name for the tour.
#   status:     A boolean, defining whether the tour is enabled.
#   langcode:   A two-letter language code defining the language of your tour.
#   routes:     An array of routes for which the tour is active. Specify these
#               as an array with route_name and optional route_params (also an
#               array). Route names are found in each module's routing.yml file.
#
#
# TIP DEFINITIONS
#
# Here, you define each tip that you want to appear in your tour. Each of
# the tips have properties that must be defined, including the following:
#
#   id:         Each tip needs a unique ID. This appears as an ID in the HTML.
#   plugin:     The Tour API uses plugins for defining different types of
#               tips. The 'text' plugin (for making text tooltips) is provided
#               in core, but developers can define additional plugins for tips
#               containing images, video, or other interactions.
#   label:      The lable for the tip. This will be rendered in an h3 element.
#   body:       The body of the tip. HTML markup is allowed.
#   weight:     Tips within a tour are ordered by weight, beginning with the
#               lowest number. Negative values are acceptable.
#   location:   Defines the location of the tip, relative to its target.
#               Acceptable values include: top, bottom, left, & right. If the
#               location is not defined, the default value (bottom) will be
#               used.
#   attributes: Attributes provdied to the tip for various purposes. Use the
#               following attributes to control the placement of the tip:
#
#                 data-id:      Places this tip on the DOM element containing
#                               this ID.
#                 data-class:   Places this tip on the DOM element containing
#                               this class.
#
#               If you omit both the .data-id and .data-class, the tip will be
#               shown as modal instead of being targeted to an element.
#
id: campaign-page-add
module: campaign_pages_tour
label: 'Create campaign page'
langcode: en
status: true
dependencies:
  module:
    - campaign_pages_tour
routes:
  - route_name: node.add
    route_params:
      node_type: campaign
tips:
  introduction:
    id: introduction
    plugin: text
    label: 'Creating new content'
    body: 'This tour will guide you through the necessary fields on this campaign site creating a page'
    weight: 1

  title:
    id: title
    plugin: text
    label: 'Adding a title'
    body: 'First of all, itʼs mandatory to name your campaign site being created: keep title concise and short.'
    weight: 2
    attributes:
      data-id: edit-title-0-value

  langcode:
    id: langcode
    plugin: text
    label: 'Choosing language'
    body: 'Every campaign site should have their original language defined: this will be important for adding translations too.'
    weight: 3
    attributes:
      data-id: edit-langcode-0-value

  file:
    id: file
    plugin: text
    label: 'Attaching files'
    body: 'If needed, optionally you are able to upload some files to this campaign site. For example, they can be used as the target of CTA buttons.'
    weight: 4
    attributes:
      data-id: edit-field-file

  menu-uri:
    id: menu-uri
    plugin: text
    label: 'Building menu'
    body: 'Although not mandatory, one important thing is to define some menu items to help Visitors navigate vertically through the campaign site. Here comes the target.'
    weight: 5
    attributes:
      data-id: edit-field-menu-0-uri

  menu-title:
    id: menu-title
    plugin: text
    label: 'Naming menu items'
    body: 'Type here the 1-2 words that you want this menu item should show. Keep them short. Click "New menu link" for adding more options below.'
    weight: 6
    attributes:
      data-id: edit-field-menu-0-title

  paragraphs-add-more:
    id: paragraphs-add-more
    plugin: text
    label: 'Adding sections'
    body: 'Now you can start building up the campaign site by choosing one or more from the available section types. Each has different purpose and fields.'
    weight: 7
    attributes:
      data-id: edit-field-paragraphs-add-more-title

  scheduled-publish:
    id: scheduled-publish
    plugin: text
    label: 'Planning start of lifecycle'
    body: 'You can specify a future date when your campaign should activate. When this time comes, the page will be automatically published.'
    weight: 8
    attributes:
      data-id: edit-scheduled-publish-date-actions

  scheduled-archive:
    id: scheduled-archive
    plugin: text
    label: 'Planning end of lifecycle'
    body: 'To avoid leaving too old content still published without notice, please set an end date while your content will be relevant (eg. when your event is over).'
    weight: 9
    attributes:
      data-id: edit-scheduled-archive-date-actions

  metatags:
    id: metatags
    plugin: text
    label: 'Content for machines too'
    body: 'To continue, click on "Metatags" section title on the sidebar and open up "Twitter Cards" frame, then do the same with "Open Graph" frame below.'
    weight: 10
    attributes:
      data-id: edit-field-meta-tags-0

  og-description:
    id: og-description
    plugin: text
    label: 'Summary for social networks'
    body: 'Here under the "Open Graph" frame you can specify what text social networks should use when this page is being shared on them.'
    weight: 11
    attributes:
      data-id: edit-field-meta-tags-0-open-graph-og-description

  twitter-cards-type:
    id: twitter-cards-type
    plugin: text
    label: 'How to share on Twitter'
    body: 'In this next "Twitter Cards" frame here you can specify how Twitter should display this link when the page is being tweeted.'
    weight: 12
    attributes:
      data-id: edit-field-meta-tags-0-twitter-cards-twitter-cards-type

  twitter-cards-description:
    id: twitter-cards-description
    plugin: text
    label: 'Sumary for Twitter'
    body: 'In case if you want for Twitter different summary text to be used than for Facebook, then here you can overwrite in max. 200 characters.'
    weight: 13
    attributes:
      data-id: edit-field-meta-tags-0-twitter-cards-twitter-cards-description

  revision-msg:
    id: revision-msg
    plugin: text
    label: 'Sum up your changes'
    body: 'You can leave a comment summarizing the changes you made. This can serve as a memo for yourself and others to understand the modifications.'
    weight: 14
    attributes:
      data-id: edit-revision-log-0-value

  submit:
    id: submit
    plugin: text
    label: 'Saving new content'
    body: 'Depending on the permissions your user account has granted, you have multiple options on how to submit the changes: keep as Draft or Publish immediately.'
    weight: 15
    attributes:
      data-id: dropbutton-action input[value="Save and Create New Draft"]

  closing:
    id: closing
    plugin: text
    label: 'Thatʼs all!'
    body: 'This user interface tour has ended. If you still have questions, please feel free to ask your Administrator for further assistance. Happy publishing!'
    weight: 16
