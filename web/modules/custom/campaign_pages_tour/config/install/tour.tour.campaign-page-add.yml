# This file defines the tour for our example page. There should be one tour
# file for each tour that you create. These tour files should be placed in a
# module's 'config' folder and named using the pattern
# 'tour.tour.{tour-id}.yml'.
#
# Each tour file has two parts: 1) The tour properties, and 2) the tip
# definitions.
#
#
# TOUR PROPERTIES
#
# The tour properties define information that applies to the tour as a whole.
# Properties that you can define for your tours include the following:
#
#   id:         Each tour should have a unique ID. This id is used in the
#               filename and appears as an ID in the HTML.
#   module:     The machine name of the module containing your tour.
#   label:      A human readable name for the tour.
#   status:     A boolean, defining whether the tour is enabled.
#   langcode:   A two-letter language code defining the language of your tour.
#   routes:     An array of routes for which the tour is active. Specify these
#               as an array with route_name and optional route_params (also an
#               array). Route names are found in each module's routing.yml file.
#
#
# TIP DEFINITIONS
#
# Here, you define each tip that you want to appear in your tour. Each of
# the tips have properties that must be defined, including the following:
#
#   id:         Each tip needs a unique ID. This appears as an ID in the HTML.
#   plugin:     The Tour API uses plugins for defining different types of
#               tips. The 'text' plugin (for making text tooltips) is provided
#               in core, but developers can define additional plugins for tips
#               containing images, video, or other interactions.
#   label:      The lable for the tip. This will be rendered in an h3 element.
#   body:       The body of the tip. HTML markup is allowed.
#   weight:     Tips within a tour are ordered by weight, beginning with the
#               lowest number. Negative values are acceptable.
#   location:   Defines the location of the tip, relative to its target.
#               Acceptable values include: top, bottom, left, & right. If the
#               location is not defined, the default value (bottom) will be
#               used.
#   attributes: Attributes provdied to the tip for various purposes. Use the
#               following attributes to control the placement of the tip:
#
#                 data-id:      Places this tip on the DOM element containing
#                               this ID.
#                 data-class:   Places this tip on the DOM element containing
#                               this class.
#
#               If you omit both the .data-id and .data-class, the tip will be
#               shown as modal instead of being targeted to an element.
#
id: campaign-page-add
module: campaign_pages_tour
label: 'Create campaign page'
langcode: en
status: true
dependencies:
  module:
    - campaign_pages_tour
routes:
  - route_name: node.add
    route_params:
      node_type: campaign
tips:
  introduction:
    id: introduction
    plugin: text
    label: 'Creating new content'
    body: 'Tour about creating content.'
    weight: 1

  title:
    id: title
    plugin: text
    label: 'Title'
    body: 'Input a title here.'
    weight: 2
    attributes:
      data-id: edit-title-0-value

  revision-msg:
    id: revision-msg
    plugin: text
    label: 'Revision message'
    body: 'You can write a comment about the changes here.'
    weight: 3
    attributes:
      data-id: edit-revision-log-0-value
