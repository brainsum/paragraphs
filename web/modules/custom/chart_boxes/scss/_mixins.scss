// Common roles for header links buttons
@mixin header_link() {
  a {
    outline: none;
    text-decoration: none;
    color: $color-gray-dark;
    &.active,
    &:hover {
      color: $color-base;
    }
  }
}

@mixin border_radius($value){
  border-collapse: separate; 
  -webkit-border-radius: $value;
  -moz-border-radius: $value;
  border-radius: $value;
  overflow: hidden;
}

@mixin border-top-radius($radius) {
  border-top-right-radius: $radius;
  border-top-left-radius: $radius;
}

@mixin border-right-radius($radius) {
  border-bottom-right-radius: $radius;
  border-top-right-radius: $radius;
}

@mixin border-bottom-radius($radius) {
  border-bottom-right-radius: $radius;
  border-bottom-left-radius: $radius;
}

@mixin border-left-radius($radius) {
  border-bottom-left-radius: $radius;
  border-top-left-radius: $radius;
}

@mixin user_select($value){
  -webkit-touch-callout: $value;
  -webkit-user-select: $value;
  -khtml-user-select: $value;
  -moz-user-select: $value;
  -ms-user-select: $value;
  user-select: $value;
}

@mixin clearfix() {
  &:before,
    &:after {
    content: " "; // 1
    display: table; // 2
  }
  &:after {
    clear: both;
  }
}

.clearfix {
  @include clearfix;
}

@mixin box-shadow($shadow...) {
  -webkit-box-shadow: $shadow; // iOS <4.3 & Android <4.1
  box-shadow: $shadow;
}

@mixin rotate($degrees) {
  -webkit-transform: rotate($degrees);
  -ms-transform: rotate($degrees); // IE9 only
  -o-transform: rotate($degrees);
  transform: rotate($degrees);
}

@mixin rotateX($degrees) {
  -webkit-transform: rotateX($degrees);
  -ms-transform: rotateX($degrees); // IE9 only
  -o-transform: rotateX($degrees);
  transform: rotateX($degrees);
}
@mixin rotateY($degrees) {
  -webkit-transform: rotateY($degrees);
  -ms-transform: rotateY($degrees); // IE9 only
  -o-transform: rotateY($degrees);
  transform: rotateY($degrees);
}
@mixin perspective($perspective) {
  -webkit-perspective: $perspective;
  -moz-perspective: $perspective;
  perspective: $perspective;
}
@mixin perspective-origin($perspective) {
  -webkit-perspective-origin: $perspective;
  -moz-perspective-origin: $perspective;
  perspective-origin: $perspective;
}
@mixin transform-origin($origin) {
  -webkit-transform-origin: $origin;
  -moz-transform-origin: $origin;
  -ms-transform-origin: $origin; // IE9 only
  transform-origin: $origin;
}

@mixin transition-property($transition-property...) {
  -webkit-transition-property: $transition-property;
  transition-property: $transition-property;
}
@mixin transition-delay($transition-delay) {
  -webkit-transition-delay: $transition-delay;
  transition-delay: $transition-delay;
}
@mixin transition-duration($transition-duration...) {
  -webkit-transition-duration: $transition-duration;
  transition-duration: $transition-duration;
}
@mixin transition-timing-function($timing-function) {
  -webkit-transition-timing-function: $timing-function;
  transition-timing-function: $timing-function;
}
@mixin transition-transform($transition...) {
  -webkit-transition: -webkit-transform $transition;
  -moz-transition: -moz-transform $transition;
  -o-transition: -o-transform $transition;
  transition: transform $transition;
}

// @include iPrimaOpacityImage();
@mixin iPrimaOpacityImage($radius: none){
  -webkit-mask-image: -webkit-radial-gradient(white, black);
  overflow: hidden;
  position: relative;
  &.iPrima-image-loaded {
    &:before {
      content: '';
      overflow: hidden;
      display: block;
      position: absolute;
      top: 1px;
      right: 1px;
      bottom: 1px;
      left: 1px;
      background-color: $black;
      @if $radius != none {
        @include border_radius($radius);
      }
    }
    picture,
    img {
      vertical-align: top;
    }
    img {
      @include opacity(.95);
    }
  }
}
// @include iPrimaAnimeImage();
@mixin iPrimaAnimeImage(){
  img {
    @include transition(all .15s ease-in-out);
  }
}
// @include iPrimaImageVideoButton();
// $inner = if has inner text | default: false
// $loaded = if will be visible only after image loaded | default: true
@mixin iPrimaImageVideoButton($inner: false,$loaded: false){
  @if $loaded == true {
    &__play-overlay {
      display: none;
    }
    &.iPrima-image-loaded &__play-overlay {
      display: block;
      @if $inner == true {
        background-color: rgba(0,0,0,0.05);
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        &--inner {
          width: 100%;
          height: 100%;
          @include flexbox;
          @include flex-direction(column);
          @include flex-wrap();
          @include justify-content(center);
          @include align-items(center);
          @include align-content(center);
          text-align: center;
          font-size: 18px;
          line-height: 21px;
          color: $white;
          font-weight: 700;
          &__icon {
            margin-bottom: 12px;
            width: 80px;
            height: 80px;
            background-image: url('../images/play-buttons/scope-teaser-article-play-button.png'); // Fallback PNG
            background-image: url('../images/play-buttons/scope-teaser-article-play-button.svg');
            background-repeat: no-repeat;
            background-position: center center;
          }
        }
      } @else {
        background-color: rgba(0,0,0,0.05);
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background-image: url('../images/play-buttons/scope-related-content-play-button.png'); // Fallback PNG
        background-image: url('../images/play-buttons/scope-related-content-play-button.svg');
        background-repeat: no-repeat;
        background-position: center center;
      }
    }
  } @else {
    &__play-overlay {
      display: block;
      @if $inner == true {
        background-color: rgba(0,0,0,0.05);
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        &--inner {
          width: 100%;
          height: 100%;
          @include flexbox;
          @include flex-direction(column);
          @include flex-wrap();
          @include justify-content(center);
          @include align-items(center);
          @include align-content(center);
          text-align: center;
          font-size: 18px;
          line-height: 21px;
          color: $white;
          font-weight: 700;
          &__icon {
            margin-bottom: 12px;
            width: 80px;
            height: 80px;
            background-image: url('../images/play-buttons/scope-teaser-article-play-button.png'); // Fallback PNG
            background-image: url('../images/play-buttons/scope-teaser-article-play-button.svg');
            background-repeat: no-repeat;
            background-position: center center;
          }
        }
      } @else {
        background-color: rgba(0,0,0,0.05);
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background-image: url('../images/play-buttons/scope-related-content-play-button.png'); // Fallback PNG
        background-image: url('../images/play-buttons/scope-related-content-play-button.svg');
        background-repeat: no-repeat;
        background-position: center center;
      }
    }
  }
}

@mixin opacity($opacity) {
  opacity: $opacity;
  // IE8 filter
  $opacity-ie: ($opacity * 100);
  filter: alpha(opacity=$opacity-ie);
}

@mixin size($width, $height) {
  width: $width;
  height: $height;
}

@mixin square($size) {
  @include size($size, $size);
}

// @include filterBlur(value);
@mixin filterBlur($val) {
  -webkit-filter: blur($val);
  -moz-filter: blur($val);
  -o-filter: blur($val);
  -ms-filter: blur($val);
  filter: blur($val);
}

// Box sizing
@mixin box-sizing($boxmodel) {
  -webkit-box-sizing: $boxmodel;
  -moz-box-sizing: $boxmodel;
  box-sizing: $boxmodel;
}

// @include transition(values);
@mixin transition($transition...) {
  -moz-transition: $transition;
  -ms-transition: $transition;
  -o-transition: $transition;
  -webkit-transition: $transition;
  transition: $transition;
}

@mixin center-block() {
  display: block;
  margin-left: auto;
  margin-right: auto;
}

@mixin letter-spacing($letterspacing) {
  letter-spacing: $letterspacing/1000 + em;
}

@mixin backface-visibility($visibility){
  -webkit-backface-visibility: $visibility;
  -moz-backface-visibility: $visibility;
  backface-visibility: $visibility;
}

@mixin scaleX($ratio) {
  -webkit-transform: scaleX($ratio);
  -ms-transform: scaleX($ratio); // IE9 only
  -o-transform: scaleX($ratio);
  transform: scaleX($ratio);
}
@mixin scaleY($ratio) {
  -webkit-transform: scaleY($ratio);
  -ms-transform: scaleY($ratio); // IE9 only
  -o-transform: scaleY($ratio);
  transform: scaleY($ratio);
}
@mixin skew($x, $y) {
  -webkit-transform: skewX($x) skewY($y);
  -ms-transform: skewX($x) skewY($y); // See https://github.com/twbs/bootstrap/issues/4885; IE9+
  -o-transform: skewX($x) skewY($y);
  transform: skewX($x) skewY($y);
}
@mixin translate($x, $y) {
  -webkit-transform: translate($x, $y);
  -ms-transform: translate($x, $y); // IE9 only
  -o-transform: translate($x, $y);
  transform: translate($x, $y);
}
@mixin translate3d($x, $y, $z) {
  -webkit-transform: translate3d($x, $y, $z);
  transform: translate3d($x, $y, $z);
}
// Placeholder text
@mixin placeholder($color: $input-color-placeholder) {
  // Firefox
  &::-moz-placeholder {
    color: $color;
    @include opacity(1); // Override Firefox's unusual default opacity; see https://github.com/twbs/bootstrap/pull/11526
  }
  &:-ms-input-placeholder { color: $color; } // Internet Explorer 10+
  &::-webkit-input-placeholder  { color: $color; } // Safari and Chrome
}

// Transformations
@mixin scale($ratio...) {
  -webkit-transform: scale($ratio);
  -ms-transform: scale($ratio); // IE9 only
  -o-transform: scale($ratio);
  transform: scale($ratio);
}

// Pulse animation
$pulse-bg-colors: ();
@mixin pulse-bg($color) {
  // Name the current animation for later use.
  $animation-id: 'pulse-bg_' + str-slice(inspect($color), 2);
  // If color hasn't already been created
  @if not index($pulse-bg-colors, $animation-id) {
    @at-root {
      %#{$animation-id} {
        animation: #{$animation-id} .8s infinite alternate;
        outline: none;
      }
      @keyframes #{$animation-id} {
        to { background: rgba($color, .6); }
      }
    }
    // Add color to index
    $pulse-bg-colors: append($pulse-bg-colors, #{$animation-id}) !global;
  }
  // Extend the global animation
  @extend %#{$animation-id};
}