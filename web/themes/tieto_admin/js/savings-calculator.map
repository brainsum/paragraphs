{"version":3,"sources":["savings-calculator.js"],"names":["$","fn","savingsCalculator","settings","extend","calculate","x","result","Math","round","format","parts","i","toString","length","push","substring","reverse","join","numberInput","resultContainer","each","$el","$number","find","$result","on","e","preventDefault","value","parseInt","val","text","jQuery"],"mappings":";CAAA,SAACA,GACGA,EAAEC,GAAGC,kBAAoB,SAASC,GAoCzB,OAPPA,EAAWH,EAAEI,OAAO,CAClBC,UAvBOA,SAAUC,GACbC,IAAAA,EAAa,KAAJD,EAAW,GAAS,IAAJA,EAAU,GAChCE,OAAAA,KAAKC,MAAMF,IAsBlBG,OAbOA,SAAOJ,GAIT,IADDK,IAAAA,EAAQ,GACHC,GAHTN,EAAIA,EAAEO,YAGSC,OAAQF,EAAI,EAAGA,GAAI,EAChCD,EAAMI,KAAKT,EAAEU,UAAUJ,EAAI,EAAGA,IAGzBD,OAAAA,EAAMM,UAAUC,KAAK,MAM5BC,YAAa,uBACbC,gBAAiB,WAChBjB,GAEI,KAAKkB,KAAK,WAEXC,IAAAA,EAAMtB,EAAE,MACRuB,EAAUD,EAAIE,KAAKrB,EAASgB,aAC5BM,EAAUH,EAAIE,KAAKrB,EAASiB,iBAKhCE,EAAII,GAAG,SAAU,SAASC,GACxBA,EAAEC,iBAEEC,IAAAA,EAAQC,SAASP,EAAQQ,QAAU,EACnCxB,EAASJ,EAASO,OAAOP,EAASE,UAAUwB,IAEhDJ,EAAQO,KAAKzB,QAKnBP,EAAE,2BAA2BE,oBAzDjC,CA0DG+B","file":"savings-calculator.map","sourceRoot":"..\\src\\js","sourcesContent":["($ => {\n    $.fn.savingsCalculator = function(settings) {\n      /**\n        * Default result calculation.\n        *\n        * @param {Integer} x value to calculate the result from.\n        * @returns {Integer}\n        */\n      function calculate(x) {\n        var result = x * 1.12 * 12 - x * .23 * 12;\n        return Math.round(result);\n      }\n      \n      /**\n        * Default result formatting. Separate every group of thousands by a comma.\n        *\n        * @param {Integer} x result to format.\n        * @returns {String}\n        */\n      function format(x) {\n        x = x.toString();\n\n        var parts = [];\n        for (var i = x.length; i > 0; i-= 3) {\n          parts.push(x.substring(i - 3, i));\n        }\n            \n        return parts.reverse().join(',');\n      }\n      \n      settings = $.extend({\n        calculate: calculate,\n        format: format,\n        numberInput: 'input[name=\"number\"]',\n        resultContainer: '.result'\n      }, settings);\n      \n      return this.each(function() {\n        // Cache DOM elements\n        var $el = $(this);\n        var $number = $el.find(settings.numberInput);\n        var $result = $el.find(settings.resultContainer);\n        \n        /**\n         * Update result on form submission.\n         */\n        $el.on('submit', function(e) {\n          e.preventDefault();\n          \n          var value = parseInt($number.val()) || 0;\n          var result = settings.format(settings.calculate(value));\n          \n          $result.text(result);\n        });\n      });\n    }\n\n    $('form.savings-calculator').savingsCalculator();\n})(jQuery);"]}